{"ast":null,"code":"var _jsxFileName = \"/Users/ducdan/Desktop/Mooc project/MoocProjectCode/src/components/Shop/ProductDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport ProductItem from './ProductItem';\nimport { useEffect, useState } from 'react';\nimport classes from './ProductDetail.module.css';\nimport Rating from 'react-rating';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductDetail = props => {\n  _s();\n\n  const params = useParams();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const response = await fetch('https://react-http-838c9-default-rtdb.firebaseio.com/products.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedProducts = [];\n\n      for (const key in responseData) {\n        loadedProducts.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setProducts(loadedProducts);\n    };\n\n    fetchProducts().catch(error => {});\n  }, []); // method\n\n  const product = products.find(prd => prd.id === params.productId);\n\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No product found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.h1,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Product Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(ProductItem, {\n          id: product.id,\n          name: product.name,\n          description: product.description,\n          price: product.price\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Rating, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductDetail, \"135SXecugRpKkWftHHRg4DyJH4s=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductDetail;\nexport default ProductDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"sources":["/Users/ducdan/Desktop/Mooc project/MoocProjectCode/src/components/Shop/ProductDetail.js"],"names":["useParams","Card","ProductItem","useEffect","useState","classes","Rating","ProductDetail","props","params","products","setProducts","fetchProducts","response","fetch","ok","Error","responseData","json","loadedProducts","key","push","id","name","description","price","catch","error","product","find","prd","productId","h1"],"mappings":";;;AAAA,SAASA,SAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,aAAa,GAAG,YAAY;AAC9B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC5B,oEAD4B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH;;AACD,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AACA,YAAMC,cAAc,GAAG,EAAvB;;AAEA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAChCE,QAAAA,cAAc,CAACE,IAAf,CAAoB;AAChBC,UAAAA,EAAE,EAAEF,GADY;AAEhBG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFR;AAGhBC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHf;AAIhBC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJT,SAApB;AAMC;;AAEDd,MAAAA,WAAW,CAACQ,cAAD,CAAX;AACH,KArBD;;AAsBIP,IAAAA,aAAa,GAAGc,KAAhB,CAAuBC,KAAD,IAAW,CAAE,CAAnC;AACP,GAxBQ,EAwBN,EAxBM,CAAT,CAJ6B,CA8B7B;;AACA,QAAMC,OAAO,GAAGlB,QAAQ,CAACmB,IAAT,CAAeC,GAAD,IAASA,GAAG,CAACR,EAAJ,KAAWb,MAAM,CAACsB,SAAzC,CAAhB;;AAEA,MAAI,CAACH,OAAL,EAAc;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEvB,OAAO,CAAC2B,EAAxB;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,IAAD;AAAA,8BACI;AAAA,+BACI,QAAC,WAAD;AAEI,UAAA,EAAE,EAAEJ,OAAO,CAACN,EAFhB;AAGI,UAAA,IAAI,EAAEM,OAAO,CAACL,IAHlB;AAII,UAAA,WAAW,EAAEK,OAAO,CAACJ,WAJzB;AAKI,UAAA,KAAK,EAAEI,OAAO,CAACH;AALnB,WACSG,OAAO,CAACN,EADjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAoBH,CAzDD;;GAAMf,a;UACaP,S;;;KADbO,a;AA2DN,eAAeA,aAAf","sourcesContent":["import { useParams} from 'react-router-dom';\nimport Card from '../UI/Card';\nimport ProductItem from './ProductItem';\nimport { useEffect, useState } from 'react';\n\n\nimport classes from './ProductDetail.module.css';\nimport Rating from 'react-rating';\n\n\nconst ProductDetail = (props) => {\n    const params = useParams();\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n        const fetchProducts = async () => {\n            const response = await fetch(\n            'https://react-http-838c9-default-rtdb.firebaseio.com/products.json'\n            );\n    \n            if (!response.ok) {\n                throw new Error('Something went wrong!');\n            }\n            const responseData = await response.json();\n            const loadedProducts = [];\n    \n            for (const key in responseData) {\n            loadedProducts.push({\n                id: key,\n                name: responseData[key].name,\n                description: responseData[key].description,\n                price: responseData[key].price,\n            });\n            }\n    \n            setProducts(loadedProducts);\n        };\n            fetchProducts().catch((error) => {});\n    }, []);\n\n    // method\n    const product = products.find((prd) => prd.id === params.productId);\n\n    if (!product) {\n        return <p>No product found!</p>;\n    }\n\n    return (\n        <>\n            <div className={classes.h1}>\n                <h1>Product Detail</h1>\n            </div>\n            <Card>\n                <section>\n                    <ProductItem\n                        key={product.id}\n                        id={product.id}\n                        name={product.name}\n                        description={product.description}\n                        price={product.price}\n                    /> \n                </section>\n                <Rating />\n            </Card>\n           \n        </>\n  );\n};\n\nexport default ProductDetail;"]},"metadata":{},"sourceType":"module"}