{"ast":null,"code":"var _jsxFileName = \"/Users/ducdan/Desktop/Mooc project/MoocProjectCode/src/components/Rate/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rate = _ref => {\n  _s();\n\n  let {\n    count,\n    rating,\n    color,\n    onRating\n  } = _ref;\n  const [hoverRating, setHoverRating] = useState(0);\n\n  const getColor = index => {\n    if (hoverRating >= index) {\n      return color.filled;\n    } else if (!hoverRating && rating >= index) {\n      return color.fillde;\n    }\n\n    return color.unfilled;\n  };\n\n  const startRating = useMemo(() => {\n    return Array(count).fill(0).map((_, i) => i + 1).map(idx => /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      className: \"cursor-pointer\" // icon = \"star\"\n      ,\n      icon: ['fas', 'star'],\n      onClick: () => onRating(idx),\n      style: {\n        color: getColor(idx)\n      },\n      onMouseEnter: () => setHoverRating(idx),\n      onMouseLeave: () => setHoverRating(0)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }, this));\n  }, [count, rating, hoverRating]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: startRating\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Rate, \"6onUnehxlJZyyppKhl29e3fnj30=\");\n\n_c = Rate;\nRate.propTypes = {\n  count: PropTypes.number,\n  rating: PropTypes.number,\n  onRating: PropTypes.func,\n  color: {\n    filled: PropTypes.string,\n    unfilled: PropTypes.string\n  }\n};\nRate.defaultProps = {\n  count: 5,\n  rating: 0,\n  color: {\n    filled: \"#f5eb3b\",\n    unfilled: \"#DCDCDC\"\n  }\n};\nexport default Rate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rate\");","map":{"version":3,"sources":["/Users/ducdan/Desktop/Mooc project/MoocProjectCode/src/components/Rate/index.js"],"names":["React","useMemo","useState","PropTypes","FontAwesomeIcon","Rate","count","rating","color","onRating","hoverRating","setHoverRating","getColor","index","filled","fillde","unfilled","startRating","Array","fill","map","_","i","idx","propTypes","number","func","string","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AAEA,MAAMC,IAAI,GAAG,QAAsC;AAAA;;AAAA,MAArC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,GAAqC;AAE/C,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;;AAEA,QAAMU,QAAQ,GAAGC,KAAK,IAAI;AACtB,QAAGH,WAAW,IAAIG,KAAlB,EAAyB;AACrB,aAAOL,KAAK,CAACM,MAAb;AACH,KAFD,MAEO,IAAI,CAACJ,WAAD,IAAgBH,MAAM,IAAIM,KAA9B,EAAqC;AACxC,aAAOL,KAAK,CAACO,MAAb;AACH;;AACD,WAAOP,KAAK,CAACQ,QAAb;AACH,GAPD;;AASA,QAAMC,WAAW,GAAGhB,OAAO,CAAC,MAAM;AAC9B,WAAOiB,KAAK,CAACZ,KAAD,CAAL,CACMa,IADN,CACW,CADX,EAEMC,GAFN,CAEU,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,CAFxB,EAGMF,GAHN,CAGUG,GAAG,iBACJ,QAAC,eAAD;AAEI,MAAA,SAAS,EAAG,gBAFhB,CAGI;AAHJ;AAII,MAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,MAAR,CAJV;AAKI,MAAA,OAAO,EAAI,MAAMd,QAAQ,CAACc,GAAD,CAL7B;AAMI,MAAA,KAAK,EAAI;AAACf,QAAAA,KAAK,EAAEI,QAAQ,CAACW,GAAD;AAAhB,OANb;AAOI,MAAA,YAAY,EAAI,MAAMZ,cAAc,CAACY,GAAD,CAPxC;AAQI,MAAA,YAAY,EAAI,MAAMZ,cAAc,CAAC,CAAD;AARxC,OACWY,GADX;AAAA;AAAA;AAAA;AAAA,YAJT,CAAP;AAeH,GAhB0B,EAgBxB,CAACjB,KAAD,EAAQC,MAAR,EAAgBG,WAAhB,CAhBwB,CAA3B;AAkBA,sBACI;AAAA,cACKO;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApCD;;GAAMZ,I;;KAAAA,I;AAuCNA,IAAI,CAACmB,SAAL,GAAiB;AACblB,EAAAA,KAAK,EAAEH,SAAS,CAACsB,MADJ;AAEblB,EAAAA,MAAM,EAAEJ,SAAS,CAACsB,MAFL;AAGbhB,EAAAA,QAAQ,EAAEN,SAAS,CAACuB,IAHP;AAIblB,EAAAA,KAAK,EAAE;AACHM,IAAAA,MAAM,EAAEX,SAAS,CAACwB,MADf;AAEHX,IAAAA,QAAQ,EAAEb,SAAS,CAACwB;AAFjB;AAJM,CAAjB;AAUAtB,IAAI,CAACuB,YAAL,GAAoB;AAChBtB,EAAAA,KAAK,EAAE,CADS;AAEhBC,EAAAA,MAAM,EAAE,CAFQ;AAGhBC,EAAAA,KAAK,EAAE;AACHM,IAAAA,MAAM,EAAE,SADL;AAEHE,IAAAA,QAAQ,EAAE;AAFP;AAHS,CAApB;AASA,eAAeX,IAAf","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Rate = ({count, rating, color, onRating}) => {\n\n    const [ hoverRating, setHoverRating ] = useState(0);\n\n    const getColor = index => {\n        if(hoverRating >= index) {\n            return color.filled;\n        } else if (!hoverRating && rating >= index) {\n            return color.fillde;\n        }\n        return color.unfilled;\n    }\n\n    const startRating = useMemo(() => {\n        return Array(count)\n                    .fill(0)\n                    .map((_, i) => i + 1)\n                    .map(idx => (\n                        <FontAwesomeIcon\n                            key = {idx}\n                            className = \"cursor-pointer\"\n                            // icon = \"star\"\n                            icon={['fas', 'star']}\n                            onClick = {() => onRating(idx)}\n                            style = {{color: getColor(idx)}}\n                            onMouseEnter = {() => setHoverRating(idx)}\n                            onMouseLeave = {() => setHoverRating(0)}\n                        />\n                    ));\n    }, [count, rating, hoverRating]);\n\n    return (\n        <div>\n            {startRating}\n        </div>\n    );\n}\n\n\nRate.propTypes = {\n    count: PropTypes.number,\n    rating: PropTypes.number,\n    onRating: PropTypes.func,\n    color: {\n        filled: PropTypes.string,\n        unfilled: PropTypes.string\n    }\n}\n\nRate.defaultProps = {\n    count: 5,\n    rating: 0,\n    color: {\n        filled: \"#f5eb3b\",\n        unfilled: \"#DCDCDC\"\n    }\n}\n\nexport default Rate;"]},"metadata":{},"sourceType":"module"}