{"ast":null,"code":"var _jsxFileName = \"/Users/ducdan/Desktop/Mooc project/MoocProjectCode/src/components/Pagination/index.js\";\nimport React from 'react';\nimport PropType from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPagination.propType = {\n  pagination: PropType.object.isRequired,\n  onPageChange: PropType.func\n};\nPagination.defaultProps = {\n  onPageChange: null\n};\n\nconst Pagination = props => {\n  const {\n    pagination,\n    onPageChange\n  } = props;\n  const {\n    _page,\n    _limit,\n    _totalRows\n  } = pagination;\n  const totalPages = Math.ceil(_totalRows / _limit);\n\n  const handlePageChange = newPage => {\n    if (onPageChange) {\n      onPageChange(newPage);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/ducdan/Desktop/Mooc project/MoocProjectCode/src/components/Pagination/index.js"],"names":["React","PropType","Pagination","propType","pagination","object","isRequired","onPageChange","func","defaultProps","props","_page","_limit","_totalRows","totalPages","Math","ceil","handlePageChange","newPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEAC,UAAU,CAACC,QAAX,GAAsB;AAClBC,EAAAA,UAAU,EAAEH,QAAQ,CAACI,MAAT,CAAgBC,UADV;AAElBC,EAAAA,YAAY,EAAEN,QAAQ,CAACO;AAFL,CAAtB;AAKAN,UAAU,CAACO,YAAX,GAA0B;AACtBF,EAAAA,YAAY,EAAE;AADQ,CAA1B;;AAIA,MAAML,UAAU,GAAIQ,KAAD,IAAW;AAC1B,QAAM;AAACN,IAAAA,UAAD;AAAaG,IAAAA;AAAb,MAA6BG,KAAnC;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,MAAgCT,UAAtC;AACA,QAAMU,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,UAAU,GAAGD,MAAvB,CAAnB;;AAEA,QAAMK,gBAAgB,GAAIC,OAAD,IAAa;AAClC,QAAGX,YAAH,EAAgB;AACZA,MAAAA,YAAY,CAACW,OAAD,CAAZ;AACH;AACJ,GAJD;;AAMA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA7BD;;KAAMhB,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport PropType from 'prop-types';\n\nPagination.propType = {\n    pagination: PropType.object.isRequired,\n    onPageChange: PropType.func,\n};\n\nPagination.defaultProps = {\n    onPageChange: null,\n}\n\nconst Pagination = (props) => {\n    const {pagination, onPageChange} = props;\n    const { _page, _limit, _totalRows } = pagination;\n    const totalPages = Math.ceil(_totalRows / _limit);\n\n    const handlePageChange = (newPage) => {\n        if(onPageChange){\n            onPageChange(newPage);\n        }\n    }\n\n    return (\n        <div>\n            <button\n                // Disable button prev khi là trang số 1 (đầu tiên)\n                // disabled = {_page <= 1}\n                // onClick = {() => handlePageChange(_page - 1)}\n            >\n            Prev\n            </button>\n            <button\n                // Disable button next khi là trang số 1 (đầu tiên)\n                // disabled = {_page >= totalPages}\n                // onClick = {() => handlePageChange(_page + 1)}\n            >\n            Prev\n            </button>\n        </div>\n    );\n};\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}