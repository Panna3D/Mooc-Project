{"ast":null,"code":"var _jsxFileName = \"/Users/ducdan/Desktop/Mooc project/MoocProjectCode/src/components/Product/SearchBox.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Products from \"./Products\";\nimport classes from './SearchBox.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchBox = props => {\n  _s();\n\n  const {\n    products\n  } = props; // const [searchResult, setSearchResult] = useState(false);\n\n  const [enteredValue, setEnteredValue] = useState('');\n\n  const enteredValueHander = e => {\n    setSearchResult = false;\n    setEnteredValue(e.target.value());\n  };\n\n  let filteredProduct = products.filter(product => {\n    return product.name.toLowerCase().includes(enteredValue.toLowerCase());\n  });\n\n  const searchButtonHandler = e => {\n    e.preventDefault(); // If entered value is Empty -> return\n\n    if (enteredValue.trim().length === 0 || !filteredProduct) {\n      setSearchResult = false;\n      return;\n    } else {\n      // Else, check if matched value?\n      setSearchResult = true;\n      filteredProduct();\n    }\n\n    enteredValue = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.SearchBox,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: enteredValueHander\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchButtonHandler,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SearchBox, \"jFKbDuHD29x3PnGDGoWD/0eygag=\");\n\n_c = SearchBox;\nexport default SearchBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"sources":["/Users/ducdan/Desktop/Mooc project/MoocProjectCode/src/components/Product/SearchBox.js"],"names":["useState","Products","classes","SearchBox","props","products","enteredValue","setEnteredValue","enteredValueHander","e","setSearchResult","target","value","filteredProduct","filter","product","name","toLowerCase","includes","searchButtonHandler","preventDefault","trim","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;;AAIA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAACC,IAAAA;AAAD,MAAaD,KAAnB,CADyB,CAGzB;;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMQ,kBAAkB,GAAIC,CAAD,IAAO;AAC9BC,IAAAA,eAAe,GAAG,KAAlB;AACAH,IAAAA,eAAe,CAACE,CAAC,CAACE,MAAF,CAASC,KAAT,EAAD,CAAf;AACH,GAHD;;AAKA,MAAIC,eAAe,GAAGR,QAAQ,CAACS,MAAT,CAAgBC,OAAO,IAAI;AAC3C,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCZ,YAAY,CAACW,WAAb,EAApC,CAAP;AACL,GAFqB,CAAtB;;AAIA,QAAME,mBAAmB,GAAIV,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACW,cAAF,GAD+B,CAE/B;;AACA,QAAId,YAAY,CAACe,IAAb,GAAoBC,MAApB,KAA+B,CAA/B,IAAoC,CAACT,eAAzC,EAA0D;AACtDH,MAAAA,eAAe,GAAG,KAAlB;AACA;AACH,KAHD,MAGO;AAAE;AACLA,MAAAA,eAAe,GAAG,IAAlB;AACAG,MAAAA,eAAe;AAClB;;AACDP,IAAAA,YAAY,GAAG,EAAf;AACH,GAXD;;AAaA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACC,SAAxB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEK;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEW,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAQH,CApCD;;GAAMhB,S;;KAAAA,S;AAsCN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\nimport Products from \"./Products\";\nimport classes from './SearchBox.module.css';\n\n\n\nconst SearchBox = (props) => {\n    const {products} = props;\n\n    // const [searchResult, setSearchResult] = useState(false);\n    const [enteredValue, setEnteredValue] = useState('');\n\n    const enteredValueHander = (e) => {\n        setSearchResult = false;\n        setEnteredValue(e.target.value());\n    };\n\n    let filteredProduct = products.filter(product => {\n          return product.name.toLowerCase().includes(enteredValue.toLowerCase());\n    })\n\n    const searchButtonHandler = (e) => {\n        e.preventDefault();\n        // If entered value is Empty -> return\n        if (enteredValue.trim().length === 0 || !filteredProduct) {\n            setSearchResult = false;\n            return;\n        } else { // Else, check if matched value?\n            setSearchResult = true;\n            filteredProduct();\n        }\n        enteredValue = '';\n    };\n\n    return (\n        <>\n            <div className={classes.SearchBox}>\n                <input type='text' onChange={enteredValueHander}/>\n                <button onClick={searchButtonHandler}>Search</button>\n            </div>\n    </>\n    )\n};\n\nexport default SearchBox;"]},"metadata":{},"sourceType":"module"}