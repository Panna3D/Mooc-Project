{"ast":null,"code":"var _jsxFileName = \"/Users/ducdan/Desktop/Mooc project/MoocProjectCode/src/components/Product/Products.js\",\n    _s = $RefreshSig$();\n\nimport ProductItem from './ProductItem';\nimport { useEffect, useState } from 'react';\nimport classes from './Products.module.css';\nimport SearchBox from './SearchBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Products = props => {\n  _s();\n\n  const {\n    input\n  } = props;\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const response = await fetch('https://react-http-838c9-default-rtdb.firebaseio.com/products.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedProducts = [];\n\n      for (const key in responseData) {\n        loadedProducts.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setProducts(loadedProducts);\n      setIsLoading(false);\n    };\n\n    fetchProducts().catch(error => {\n      setIsLoading(false);\n    });\n    console.log('Test');\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.loading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n  const filteredData = products.name.filter(el => {\n    if (props.input === '') {\n      return el;\n    } else {\n      return el.name.toLowerCase().includes(props.input);\n    }\n  }); // Get all products list from API\n  // const productsList = products.map((product) => (\n  //   <ProductItem\n  //     key={product.id}\n  //     id={product.id}\n  //     name={product.name}\n  //     description={product.description}\n  //     price={product.price}\n  //   />\n  // ));\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.products,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Buy your favorite products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [productsList, filteredData.map(product =>\n      /*#__PURE__*/\n      // <li key={item.id}>{item.name}</li>\n      _jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(ProductItem, {\n          id: product.id,\n          name: product.name,\n          description: product.description,\n          price: product.price\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"U7Qxnmy0PRpeVhtyqezv0QxSkvk=\");\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/ducdan/Desktop/Mooc project/MoocProjectCode/src/components/Product/Products.js"],"names":["ProductItem","useEffect","useState","classes","SearchBox","Products","props","input","products","setProducts","isLoading","setIsLoading","fetchProducts","response","fetch","ok","Error","responseData","json","loadedProducts","key","push","id","name","description","price","catch","error","console","log","loading","filteredData","filter","el","toLowerCase","includes","productsList","map","product"],"mappings":"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","sourcesContent":["import ProductItem from './ProductItem';\nimport { useEffect, useState } from 'react';\n\nimport classes from './Products.module.css';\nimport SearchBox from './SearchBox';\n\nconst Products = (props) => {\n  const { input } = props;\n\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const response = await fetch(\n        'https://react-http-838c9-default-rtdb.firebaseio.com/products.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      const loadedProducts = [];\n\n      for (const key in responseData) {\n        loadedProducts.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n\n      setProducts(loadedProducts);\n      setIsLoading(false);\n    };\n\n      fetchProducts().catch((error) => {\n      setIsLoading(false);\n    });\n      console.log('Test');\n  }, []);\n\n  if (isLoading) {\n    return (\n      <section className={classes.loading}>\n        <p>Loading...</p>\n      </section>\n    );\n  }\n\n  const filteredData = products.name.filter((el) => {\n    if (props.input === '') {\n        return el;\n    } else {\n        return el.name.toLowerCase().includes(props.input);\n    }\n  });\n\n    // Get all products list from API\n    // const productsList = products.map((product) => (\n    //   <ProductItem\n    //     key={product.id}\n    //     id={product.id}\n    //     name={product.name}\n    //     description={product.description}\n    //     price={product.price}\n    //   />\n    // ));\n\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {productsList}\n        {filteredData.map((product) => (\n                // <li key={item.id}>{item.name}</li>\n                <li>\n                  <ProductItem \n                    key={product.id}\n                    id={product.id}\n                    name={product.name}\n                    description={product.description}\n                    price={product.price}\n                  />\n                </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}